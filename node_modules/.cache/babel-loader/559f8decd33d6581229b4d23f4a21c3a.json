{"ast":null,"code":"import _slicedToArray from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sudarshan/Documents/React/personalProjects/to-do/src/Todo.js\";\nimport React from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nfunction Todo(_ref) {\n  var id = _ref.id,\n      task = _ref.task,\n      completed = _ref.completed,\n      removeTodo = _ref.removeTodo,\n      toggleTodo = _ref.toggleTodo,\n      editTodo = _ref.editTodo;\n\n  var _useToggleState = useToggleState(false),\n      _useToggleState2 = _slicedToArray(_useToggleState, 2),\n      isEditing = _useToggleState2[0],\n      toggle = _useToggleState2[1];\n\n  return React.createElement(ListItem, {\n    style: {\n      height: \"64px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, isEditing ? React.createElement(EditTodoForm, {\n    editTodo: editTodo,\n    id: id,\n    task: task,\n    toggleEditForm: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(Checkbox, {\n    tabIndex: -1,\n    checked: completed,\n    onClick: function onClick() {\n      return toggleTodo(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    style: {\n      textDecoration: completed ? \"line-through\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, task), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: function onClick() {\n      return removeTodo(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/sudarshan/Documents/React/personalProjects/to-do/src/Todo.js"],"names":["React","useToggleState","EditTodoForm","ListItem","ListItemText","Checkbox","IconButton","DeleteIcon","EditIcon","ListItemSecondaryAction","Todo","id","task","completed","removeTodo","toggleTodo","editTodo","isEditing","toggle","height","textDecoration"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,uBAAP,MAAoC,2CAApC;;AAEA,SAASC,IAAT,OAAyE;AAAA,MAAzDC,EAAyD,QAAzDA,EAAyD;AAAA,MAArDC,IAAqD,QAArDA,IAAqD;AAAA,MAA/CC,SAA+C,QAA/CA,SAA+C;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,wBAC3Cf,cAAc,CAAC,KAAD,CAD6B;AAAA;AAAA,MAChEgB,SADgE;AAAA,MACrDC,MADqD;;AAEvE,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SAAS,GACR,oBAAC,YAAD;AACE,IAAA,QAAQ,EAAED,QADZ;AAEE,IAAA,EAAE,EAAEL,EAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,cAAc,EAAEM,MAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAQR,0CACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CADb;AAEE,IAAA,OAAO,EAAEL,SAFX;AAGE,IAAA,OAAO,EAAE;AAAA,aAAME,UAAU,CAACJ,EAAD,CAAhB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE;AAAES,MAAAA,cAAc,EAAEP,SAAS,GAAG,cAAH,GAAoB;AAA/C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGD,IAHH,CANF,EAWE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,QAAvB;AAAgC,IAAA,OAAO,EAAE;AAAA,aAAME,UAAU,CAACH,EAAD,CAAhB;AAAA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAY,kBAAW,MAAvB;AAA8B,IAAA,OAAO,EAAEO,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAXF,CATJ,CADF;AAiCD;;AAED,eAAeR,IAAf","sourcesContent":["import React from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nfunction Todo({ id, task, completed, removeTodo, toggleTodo, editTodo }) {\n  const [isEditing, toggle] = useToggleState(false);\n  return (\n    <ListItem style={{ height: \"64px\" }}>\n      {isEditing ? (\n        <EditTodoForm\n          editTodo={editTodo}\n          id={id}\n          task={task}\n          toggleEditForm={toggle}\n        />\n      ) : (\n        <>\n          <Checkbox\n            tabIndex={-1}\n            checked={completed}\n            onClick={() => toggleTodo(id)}\n          />\n          <ListItemText\n            style={{ textDecoration: completed ? \"line-through\" : \"none\" }}\n          >\n            {task}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton aria-label='Delete' onClick={() => removeTodo(id)}>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton aria-label='Edit' onClick={toggle}>\n              <EditIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </>\n      )}\n    </ListItem>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}