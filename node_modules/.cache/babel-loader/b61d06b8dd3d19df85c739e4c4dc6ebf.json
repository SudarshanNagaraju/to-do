{"ast":null,"code":"import _defineProperty from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sudarshan/Documents/React/personalProjects/to-do/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sudarshan/Documents/React/personalProjects/to-do/src/Todo.js\";\nimport React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nvar Todo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todo, _Component);\n\n  function Todo(props) {\n    var _this;\n\n    _classCallCheck(this, Todo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Todo).call(this, props));\n    _this.state = {\n      isEditing: false,\n      task: _this.props.task\n    };\n    _this.handleRemove = _this.handleRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUpdate = _this.handleUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleToggle = _this.handleToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Todo, [{\n    key: \"handleRemove\",\n    value: function handleRemove() {\n      this.props.removeTodo(this.props.id);\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        isEditing: !this.state.isEditing\n      });\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(evt) {\n      evt.preventDefault(); //take new task data and pass up to parent\n\n      this.props.updateTodo(this.props.id, this.state.task);\n      this.setState({\n        isEditing: false\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    }\n  }, {\n    key: \"handleToggle\",\n    value: function handleToggle(evt) {\n      this.props.toggleTodo(this.props.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var result;\n\n      if (this.state.isEditing) {\n        result = React.createElement(CSSTransition, {\n          key: \"editing\",\n          timeout: 500,\n          classNames: \"form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"Todo-edit-form\",\n          onSubmit: this.handleUpdate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.task,\n          name: \"task\",\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Save\")));\n      } else {\n        result = React.createElement(CSSTransition, {\n          key: \"normal\",\n          timeout: 500,\n          classNames: \"task-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"Todo-task\",\n          onClick: this.handleToggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, this.props.task));\n      }\n\n      return React.createElement(TransitionGroup, {\n        className: this.props.completed ? \"Todo completed\" : \"Todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, result, React.createElement(\"div\", {\n        className: \"Todo-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleRemove,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Todo;\n}(Component);\n\nexport default Todo;","map":{"version":3,"sources":["/Users/sudarshan/Documents/React/personalProjects/to-do/src/Todo.js"],"names":["React","Component","CSSTransition","TransitionGroup","Todo","props","state","isEditing","task","handleRemove","bind","toggleForm","handleChange","handleUpdate","handleToggle","removeTodo","id","setState","evt","preventDefault","updateTodo","target","name","value","toggleTodo","result","completed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      task: this.props.task\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n  toggleForm() {\n    this.setState({ isEditing: !this.state.isEditing });\n  }\n  handleUpdate(evt) {\n    evt.preventDefault();\n    //take new task data and pass up to parent\n    this.props.updateTodo(this.props.id, this.state.task);\n    this.setState({ isEditing: false });\n  }\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n  handleToggle(evt) {\n    this.props.toggleTodo(this.props.id);\n  }\n  render() {\n    let result;\n    if (this.state.isEditing) {\n      result = (\n        <CSSTransition key='editing' timeout={500} classNames='form'>\n          <form className='Todo-edit-form' onSubmit={this.handleUpdate}>\n            <input\n              type='text'\n              value={this.state.task}\n              name='task'\n              onChange={this.handleChange}\n            />\n            <button>Save</button>\n          </form>\n        </CSSTransition>\n      );\n    } else {\n      result = (\n        <CSSTransition key='normal' timeout={500} classNames='task-text'>\n          <li className='Todo-task' onClick={this.handleToggle}>\n            {this.props.task}\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <TransitionGroup\n        className={this.props.completed ? \"Todo completed\" : \"Todo\"}\n      >\n        {result}\n        <div className='Todo-buttons'>\n          <button onClick={this.toggleForm}>\n            <i class='fas fa-pen' />\n          </button>\n          <button onClick={this.handleRemove}>\n            <i class='fas fa-trash' />\n          </button>\n        </div>\n      </TransitionGroup>\n    );\n  }\n}\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}